<!--

    Copyright (C) 2015 John Casey (jdcasey@commonjava.org)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.redhat.rcm</groupId>
    <artifactId>redhat-releng-tools</artifactId>
    <version>3</version>
  </parent>

  <groupId>com.redhat.rcm.docker</groupId>
  <artifactId>koji-dojo</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  
  <inceptionYear>2016</inceptionYear>
  <url>https://github.com/release-engineering/koji-dojo</url>

  <name>Koji Dojo</name>
  <description>Docker containers for automated testing and manual exploration of the Koji build management system</description>
  
  <scm>
    <connection>scm:git:https://github.com/release-engineering/koji-dojo.git</connection>
    <developerConnection>scm:git:git@github.com:release-engineering/koji-dojo.git</developerConnection>
    <url>https://github.com/release-engineering/koji-dojo</url>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <docker.tag>dev</docker.tag>
    <dockerProvider>local</dockerProvider>
  </properties>
  
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <!-- See: https://github.com/wouterd/docker-maven-plugin -->
          <groupId>net.wouterdanes.docker</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>4.1.0</version>
          <configuration>
            <providerName>${dockerProvider}</providerName>
          </configuration>
          <executions>
            <execution>
              <id>build-images</id>
              <goals>
                <goal>build-images</goal>
              </goals>
              <phase>package</phase>
              <configuration>
                <images>
                  <image>
                    <id>hub</id>
                    <dockerFile>${project.basedir}/hub/Dockerfile</dockerFile>
                    <artifacts>
                      <artifact>
                        <file>${project.basedir}/hub/bin</file>
                        <dest>bin</dest>
                      </artifact>
                      <artifact>
                        <file>${project.basedir}/hub/etc</file>
                        <dest>etc</dest>
                      </artifact>
                      <artifact>
                        <file>${project.basedir}/hub/cgi</file>
                        <dest>cgi</dest>
                      </artifact>
                      <artifact>
                        <file>${project.basedir}/hub/root</file>
                        <dest>root</dest>
                      </artifact>
                    </artifacts>
                  </image>
                  <image>
                    <id>client</id>
                    <dockerFile>${project.basedir}/client/Dockerfile</dockerFile>
                    <artifacts>
                      <artifact>
                        <file>${project.basedir}/client/bin</file>
                        <dest>bin</dest>
                      </artifact>
                    </artifacts>
                  </image>
                </images>
              </configuration>
            </execution>
            <execution>
              <id>tag-images</id>
              <goals>
                <goal>tag-images</goal>
              </goals>
              <phase>install</phase>
              <configuration>
                <images>
                  <image>
                    <id>hub</id>
                    <tags>
                      <tag>docker.io/${docker.userName}/koji-dojo-hub:${docker.tag}</tag>
                      <tag>docker.io/${docker.userName}/koji-dojo-hub:${project.version}</tag>
                    </tags>
                    <push>true</push>
                  </image>
                  <image>
                    <id>client</id>
                    <tags>
                      <tag>docker.io/${docker.userName}/koji-dojo-client:${docker.tag}</tag>
                      <tag>docker.io/${docker.userName}/koji-dojo-client:${project.version}</tag>
                    </tags>
                    <push>true</push>
                  </image>
                </images>
              </configuration>
            </execution>
            <execution>
              <id>push-images</id>
              <goals>
                <goal>push-images</goal>
              </goals>
              <phase>deploy</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <configuration>
            <header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
            <properties>
              <owner>${projectOwner}</owner>
              <email>${projectEmail}</email>
            </properties>
            <excludes>
              <exclude>**/README.md</exclude>
              <exclude>**/LICENSE*</exclude>
              <exclude>src/test/resources/**</exclude>
              <exclude>src/main/resources/**</exclude>
            </excludes>
            <includes>
              <include>**/*.xml</include>
              <include>**/*.py</include>
              <include>**/*.service</include>
            </includes>
            <mapping>
              <service>SCRIPT_STYLE</service>
            </mapping>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>net.wouterdanes.docker</groupId>
        <artifactId>docker-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <properties>
        <docker.tag>latest</docker.tag>
      </properties>
    </profile>
  </profiles>
</project>
